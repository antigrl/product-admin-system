@model PAS.Models.Campaign
@using PAS.Helpers;
@using PAS.Models;
@{
    ViewBag.Title = "Report View";
    string archived = MyExtensions.GetEnumDescription(Status.Archived);
    int count = Model.Products.Where(p => p.ProductStatus != archived).Count();
}

<h2>Campaign Report View</h2>
<div>
    <h3 class="float-left">
        @Html.DisplayNameFor(model => model.CampaignName): @Html.DisplayFor(model => model.CampaignName)
        <br />
        @Html.DisplayNameFor(model => model.Company.CompanyName): @Html.DisplayFor(model => model.Company.CompanyName)
        <br />
        Total Campaign Inventory Costs: @ViewBag.CampaignInventoryCost
    </h3>
    <h3 class="float-right">
        @Html.DisplayNameFor(model => model.CampaignProductCount): @Html.DisplayFor(model => model.CampaignProductCount)
        <br />
        Actual Product Count: @count
    </h3>
</div>
<table id="tblExport" class="report-view-table">
    <thead>
        <tr>
            <th>NPR ID</th>
            <th>SKU</th>
            <th>Product Name</th>
            <th>Unit of Measure</th>
            <th>IOQ</th>
            <th>ASP</th>
            <th>Cost</th>
            <th>Net Cost</th>
            <th>Total Cost</th>
            <th>Inventory Cost (Total Cost*IOQ)</th>
            @foreach(var pricingTier in Model.Company.PricingTiers.Where(p => p.PricingTierStatus != MyExtensions.GetEnumDescription(Status.Archived)).OrderBy(p => p.PricingTierLevel))
            {
                <th>Tier Level: @pricingTier.PricingTierLevel
                    <br />
                    Tier Name: @pricingTier.PricingTierName
                    <br />
                    Blended Margin: @ViewBag.BlendedMarginsList[pricingTier.PricingTierLevel-1]
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model.Products.Where(p => p.ProductStatus != MyExtensions.GetEnumDescription(Status.Archived)))
        {
            <tr>
                <td>@product.ProductID</td>
                <td>@product.ProductGatewayCDISKU</td>
                <td>@product.ProductName</td>
                <td>@product.ProductUnitOfMeasure</td>
                <td>@product.ProductInitialOrderQuantity</td>
                <td>@product.ProductAnnualSalesProjection</td>
                <td>@product.ProductCost</td>
                <td>@product.ProductNetCost</td>
                <td>@product.ProductTotalCost</td>
                <td>@(product.ProductTotalCost * product.ProductInitialOrderQuantity)</td>
                @foreach(var sellPrice in product.ProductSellPrices.OrderBy(s => s.SellPriceLevel))
                {
                    <td class="table-wrapper">
                        <table>
                            <thead>
                                <tr>
                                    <th>Margin Percent</th>
                                    <th>Margin Dollar Amount</th>
                                    @foreach(var fee in sellPrice.Fees)
                                    {
                                        <th>@fee.FeeName.FeeNameName</th>
                                    }
                                    <th>Sell Price</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>@sellPrice.SellPriceMarginPercent</td>
                                    <td>@sellPrice.SellPriceMarginDollarAmount</td>
                                    @foreach(var fee in sellPrice.Fees)
                                    {
                                        <td>@fee.FeeDollarAmount</td>
                                    }
                                    <td>@sellPrice.SellPriceFinalAmount</td>
                                </tr>
                            </tbody>
                        </table>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
