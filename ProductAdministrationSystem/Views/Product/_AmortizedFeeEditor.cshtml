@model PAS.Models.Fee
@using PAS.Helpers;
@using PAS.Models;

<li class="fee editor-row amortized-fee-container">
    @using (Html.BeginCollectionItem("Fees"))
    {
        @Html.HiddenFor(model => model.ProductID)
        @Html.HiddenFor(model => model.FeeType)
        @Html.HiddenFor(model => model.FeeCalculation)
        @Html.HiddenFor(model => model.FeeStatus)

        @Html.ValidationSummary(true)
        <span>
            <a class="delete-row"></a>
        </span>

        <span class="dropdown">
            @Html.DropDownListFor(model => model.FeeAmortizedType, MyExtensions.GetGenericEnumDropDown<AmortizedTypeList>(), "")
        </span>

        <span class="charge-type">
            @if (Model.FeeNameID == 0)
            {
                @Html.DropDownList("FeeNameID", ViewBag.FeeNames as SelectList, String.Empty)
            }
            else
            {
                @Html.DropDownList("FeeNameID", ViewBag.FeeNames as SelectList)
                @Html.HiddenFor(model => model.FeeID)
            }
        </span>
        <span>
            <label>Full Charge</label>
            $&nbsp;@Html.TextBoxFor(model => model.FeeAmortizedCharge, new { @class = "dollar-value" })
        </span>

        <div class="inherited-id hide">
            @Html.HiddenFor(model => model.FeeInheritedFeeID)
        </div>
        <div class="is-inherited hide">
            @Html.HiddenFor(model => model.FeeInherited)
        </div>

        <span>
            <label>Unit Amount</label>
            @if (Model.FeeDollarAmount != null)
            {
                <span>@Html.DisplayFor(model => model.FeeDollarAmount, new { @class = "dollar-value" })</span>
            }
            else
            {
                <span>N/A</span>
            }
        </span>
    }
</li>
