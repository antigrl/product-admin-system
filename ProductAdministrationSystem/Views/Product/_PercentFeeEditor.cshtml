@model PAS.Models.Fee
@using PAS.Helpers;
@using PAS.Models;

<li class="fee editor-row percent-fee-container">
    @using (Html.BeginCollectionItem("Fees"))
    {
        @Html.HiddenFor(model => model.ProductID)
        @Html.HiddenFor(model => model.FeeType)
        @Html.HiddenFor(model => model.FeeCalculation)
        @Html.HiddenFor(model => model.FeeStatus)
        
        @Html.ValidationSummary(true)
        <span>
            <a href="#" class="delete-row"></a>
            @Html.ValidationMessageFor(model => model.FeeNameID)
        </span>
        if (Model.FeeNameID == 0)
        {
            <span>
                @Html.DropDownList("FeeNameID", ViewBag.FeeNames as SelectList, String.Empty)
            </span>
        }
        else
        {
            <span>
                @Html.DropDownList("FeeNameID", ViewBag.FeeNames as SelectList)
                @Html.HiddenFor(model => model.FeeID)
            </span>
        }
        <span>
            @Html.EditorFor(model => model.FeeLevel)
        </span>
        <span class="dropdown">
            @Html.DropDownListFor(model => model.FeePercentType, MyExtensions.GetGenericEnumDropDown<PercentTypeList>())
        </span>
        <span class="percent-span">%&nbsp;@Html.TextBoxFor(model => model.FeePercent, new { @class = "percent-value" })</span>

        <div class="inherited-id hide">
            @Html.HiddenFor(model => model.FeeInheritedFeeID)
        </div>
        <div class="is-inherited hide">
            @Html.HiddenFor(model => model.FeeInherited)
        </div>
        
        if (Model.FeeDollarAmount != null)
        {
            <span>@Html.DisplayFor(model => model.FeeDollarAmount, new { @class = "dollar-value" })</span>
        }
        else
        {
            <span>N/A</span>
        }
        <span> @Html.ValidationMessageFor(model => model.FeeDollarAmount)</span>
    }
</li>
