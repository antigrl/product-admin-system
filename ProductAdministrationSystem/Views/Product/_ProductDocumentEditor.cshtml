@model PAS.Models.ProductDocument
@using PAS.Helpers;
@using PAS.Models;

<li class="product-document editor-row">
    @using (Html.BeginCollectionItem("ProductDocuments"))
    {
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.ProductID)

        @Html.ValidationSummary(true)

        <span><a class="delete-row"></a></span>

        <div class="controls">
            @Html.LabelFor(model => model.ExpirationDate)
            @Html.EditorFor(model => model.ExpirationDate)
            @Html.ValidationMessageFor(model => model.ExpirationDate)
        </div>

        <div class="controls">
            @Html.LabelFor(model => model.Status)
            @Html.DropDownListFor(model => model.Status, MyExtensions.GetGenericEnumDropDown<Status>(), "")
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <div class="controls">
            @Html.LabelFor(model => model.AttachmentTypeID)
            @Html.DropDownListFor(model => model.AttachmentTypeID, (SelectList)ViewBag.AttachmentTypes)
            @Html.ValidationMessageFor(model => model.AttachmentTypeID)
        </div>

        <div class="controls">
            @Html.LabelForRequired(model => model.Document)

            <div class="button orange">
                <input type="file" class="input-file" name="Document" id="Document" />
            </div>
            @Html.HiddenFor(model => model.Document)
            @Html.HiddenFor(model => model.DocumentFileType)
            @Html.HiddenFor(model => model.DocumentFileName)
            @if (Model != null && Model.Document != null)
            {
                <a href="@Url.Action("Download", "ProductDocument", new { id = Model.ID })" target="_blank">Download</a>
                <a href="@Url.Action("ViewInBrowser", "ProductDocument", new { id = Model.ID })" target="_blank">View in Browser</a>
            }
        </div>
    }
</li>

