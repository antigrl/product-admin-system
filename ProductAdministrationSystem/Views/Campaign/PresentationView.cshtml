@model PAS.Models.Campaign
@using PAS.Helpers;
@using PAS.Models;
@{
    ViewBag.Title = "Presentation View";
    string archived = MyExtensions.GetEnumDescription(Status.Archived);
    int count = Model.Products.Where(p => p.ProductStatus != archived).Count();
    int productCount = 0;
}
<link rel="stylesheet" href="~/Content/presentation.css">
<link rel="stylesheet" href="~/Content/print.css" media="print">
<div class="heading">
    <h1>
        @Html.DisplayFor(model => model.Company.CompanyName)
        <div class="heading-info">
            <strong>Campaign Name:</strong> @Html.DisplayFor(model => model.CampaignName)
        </div>
    </h1>
    <input type="hidden" value="@Model.CampaignID" class="campaign-id" />
    <input type="hidden" value="@Url.Action("SaveMajorCategoryOrdering")" class="save-major-category-url">
    <input type="hidden" value="@Url.Action("SaveProductOrdering")" class="save-product-url">
</div>
<div class="top-wrapper">
    <div class="flex-grid">
        <nav class="sub-nav">
            <ul>
                <li>@Html.ActionLink("Products", "Edit", new { id = Model.CampaignID })</li>
                <li class="active">@Html.ActionLink("Presentation View", "PresentationView", new { id = Model.CampaignID })</li>
            </ul>
        </nav>
    </div>
</div>
<div class="presentation-header">
    <div class="flex-grid">
        <section class="seamless">
            <dl class="check-list-left">
                <dt>Starting Page Number</dt>
                <dd>
                    <input type="number" class="starting-page-number" name="StartingPageNumber" value="1" />
                </dd>
            </dl>
            <dl class="check-list-left"></dl>
        </section>
        <section class="seamless">
            <dl class="check-list-left">
                <dt>Show Pricing Tiers</dt>
                <dd>
                    @foreach (var tier in Model.Company.PricingTiers)
                    {

                        <input id="@tier.PricingTierName" type="checkbox" class="pricing-tier-checkbox" name="ShowPriceTiers" value="Tier_@tier.PricingTierLevel" checked />
                        <label for="@tier.PricingTierName" class="checklist-label iconicfill-check">@tier.PricingTierName</label>
                    }
                </dd>
            </dl>
        </section>
        <section class="seamless">
            <dl class="category-checkboxes check-list-left">
                <dt>Categories shown</dt>
                <dd>
                    @foreach (MajorCategoryOrdering majorCategory in ViewBag.MajorCategoryOrderingList)
                    {
                        string checkedAttribute = "";
                        if (majorCategory.ShowCategory)
                        {
                            checkedAttribute = "checked";
                        }
                        <div class="sortable-category">
                            <input id="@majorCategory.Category.CategoryName" type="checkbox" class="major-catgory-checkbox checklist" name="ShowMajorCatgory" value="Category_@majorCategory.Category.CategoryName.Replace(" ", "_").Replace("[", "").Replace("]", "").Replace("/", "")" @checkedAttribute />
                            <label for="@majorCategory.Category.CategoryName" class="checklist-label iconicfill-check">@majorCategory.Category.CategoryName</label>
                            <input type="hidden" value="@majorCategory.CategoryID" class="category-id" />
                            <input type="hidden" value="@majorCategory.ID" class="id" />
                        </div>
                    }
                </dd>
            </dl>

        </section>
    </div>
</div>
<div class="drag-and-drop-area flex-grid-category">
    @foreach (MajorCategoryOrdering majorCategory in ViewBag.MajorCategoryOrderingList)
    {
        productCount = 0;
        var productList = Model.Products.Where(p => p.ProductStatus != MyExtensions.GetEnumDescription(Status.Archived) && p.MajorCategoryID == majorCategory.CategoryID).OrderBy(p => p.MinorCategoryID.HasValue ? p.MinorCategoryID.Value : 0);
        if (majorCategory.ID != null && majorCategory.ID > 0)
        {
            productList = Model.Products.Where(p => p.ProductStatus != MyExtensions.GetEnumDescription(Status.Archived) && p.MajorCategoryID == majorCategory.CategoryID).OrderBy(p => p.ProductSortValue);
        }
        string displayNone = "display: none;";
        if (majorCategory.ShowCategory)
        {
            displayNone = "";
        }
        <section class="major-category Category_@majorCategory.Category.CategoryName.Replace(" ", "_").Replace("[", "").Replace("]", "").Replace("/", "")" style="@displayNone">

            <h2>
                <input type="text" value="@majorCategory.CategoryRename" class="major-title">
                <small>@majorCategory.Category.CategoryName</small>
            </h2>
            <div class="sortable-table-header">
                <ul>
                    <li class="product-column">ID</li>
                    <li class="product-image">Image</li>
                    <li class="product-name">Name</li>
                    <li class="minor-category-name">Minor Category</li>
                    <li>Sell Price</li>
                </ul>
            </div>
            <div class="sortable-table">
                @foreach (var product in productList)
                {
                    <ul class="product-row">

                        <li class="product-column">

                            @Html.DisplayFor(model => product.ProductID)
                            <input type="hidden" value="@product.ProductID" class="product-id" />

                        </li>

                        <li class="product-image">
                            <div class="thumb-image">
                                @if (Model != null && product.ProductImage != null)
                                {

                                    <img src="@Url.Action("Show", "Product", new { id = product.ProductID })" />

                                }
                            </div>
                        </li>

                        <li class="product-name">

                            @Html.DisplayFor(model => product.ProductName)

                        </li>
                        <li class="minor-category-name">
                            @if (product.Category1 != null)
                            {

                                @Html.DisplayFor(model => product.Category1.CategoryName)

                            }
                        </li>
                        <li class="this-sell-price">

                            @Html.DisplayFor(model => product.ProductSellPrices.Where(p => p.SellPriceLevel == 1).FirstOrDefault().SellPriceFinalAmount)

                        </li>
                    </ul>

                }

            </div>
        </section>

    }
</div>
<div class="presentation-sheet-area" style="display: none;">
    @Html.Partial("~/Views/Campaign/_PresentationPrintPreview.cshtml", Model);
</div>
<div class="bottom-save-bar" ng-cloak>
    <md-button class="showPrintPreview" data-url='@Url.Action("ReloadPrintPreview", new { id = Model.CampaignID })' name="showPrintPreview">
        Show Print Preview
    </md-button>
    <md-button data-url='@Url.Action("ReloadPrintPreview", new { id = Model.CampaignID })' name="Save Presentation Ordering" class="savePresentation md-raised">Save</md-button>
    <span hidden class="success-click" ng-click="showSimpleToast()"></span>
</div>