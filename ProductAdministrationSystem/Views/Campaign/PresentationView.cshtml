@model PAS.Models.Campaign
@using PAS.Helpers;
@using PAS.Models;
@{
    ViewBag.Title = "Presentation View";
    string archived = MyExtensions.GetEnumDescription(Status.Archived);
    int count = Model.Products.Where(p => p.ProductStatus != archived).Count();
    int productCount = 0;
}
<link rel="stylesheet" href="~/Content/presentation.css">
<link rel="stylesheet" href="~/Content/print.css" media="print">
<div class="heading">
    <h1>
        @Html.DisplayFor(model => model.Company.CompanyName)
        <div class="heading-info">
            <strong>Campaign Name:</strong> @Html.DisplayFor(model => model.CampaignName)
        </div>
    </h1>
    <input type="hidden" value="@Model.CampaignID" class="campaign-id" />
    <input type="hidden" value="@Url.Action("SaveMajorCategoryOrdering")" class="save-major-category-url">
    <input type="hidden" value="@Url.Action("SaveProductOrdering")" class="save-product-url">
</div>
<div class="top-wrapper">
    <div class="flex-grid">
        <nav class="sub-nav">
            <ul>
                <li>@Html.ActionLink("Products", "Edit", new { id = Model.CampaignID })</li>
                <li class="active">@Html.ActionLink("Presentation View", "PresentationView", new { id = Model.CampaignID })</li>
            </ul>
        </nav>
    </div>
</div>
<div class="presentation-header">
    <div class="flex-grid">
        <section class="seamless">
            <dl class="check-list-left">
                <dt>Starting Page Number</dt>
                <dd>
                    <input type="number" class="starting-page-number" name="StartingPageNumber" value="1" />
                </dd>
            </dl>
            <dl class="check-list-left">
                <dd>
                    <input type="button" class="showPrintPreview btn button" name="showPrintPreview" value="Show Print Preview" />
                </dd>
                <dd>
                    <input type="button" class="savePresentation btn button" data-url='@Url.Action("ReloadPrintPreview", new { id = Model.CampaignID })' name="Save Presentation Ordering" value="Save Presentation Ordering" />
                </dd>
            </dl>
        </section>
        <section class="seamless">
            <dl class="check-list-left">
                <dt>Show Pricing Tiers</dt>
                <dd>
                    @foreach (var tier in Model.Company.PricingTiers)
                    {

                            <input id="@tier.PricingTierName" type="checkbox" class="pricing-tier-checkbox" name="ShowPriceTiers" value="Tier_@tier.PricingTierLevel" checked />
                            <label for="@tier.PricingTierName" class="checklist-label iconicfill-check">@tier.PricingTierName</label>

                    }
                </dd>
            </dl>
        </section>
        <section class="seamless">
            <dl class="category-checkboxes check-list-left">
                <dt>Categories shown</dt>
                <dd>
                    @foreach (MajorCategoryOrdering majorCategory in ViewBag.MajorCategoryOrderingList)
                    {
                        string checkedAttribute = "";
                        if (majorCategory.ShowCategory)
                        {
                            checkedAttribute = "checked";
                        }
                        <input id="@majorCategory.Category.CategoryName" type="checkbox" class="major-catgory-checkbox checklist" name="ShowMajorCatgory" value="Category_@majorCategory.Category.CategoryName.Replace(" ", "_").Replace("[", "").Replace("]", "").Replace("/", "")" @checkedAttribute />
                        <label for="@majorCategory.Category.CategoryName" class="checklist-label iconicfill-check">@majorCategory.Category.CategoryName</label>
                    }
                </dd>
            </dl>

        </section>
    </div>
</div>
<div class="drag-and-drop-area flex-grid-category">
    @foreach (MajorCategoryOrdering majorCategory in ViewBag.MajorCategoryOrderingList)
    {
        productCount = 0;
        var productList = Model.Products.Where(p => p.ProductStatus != MyExtensions.GetEnumDescription(Status.Archived) && p.MajorCategoryID == majorCategory.CategoryID).OrderBy(p => p.MinorCategoryID.HasValue ? p.MinorCategoryID.Value : 0);
        if (majorCategory.ID != null && majorCategory.ID > 0)
        {
            productList = Model.Products.Where(p => p.ProductStatus != MyExtensions.GetEnumDescription(Status.Archived) && p.MajorCategoryID == majorCategory.CategoryID).OrderBy(p => p.ProductSortValue);
        }
        string displayNone = "display: none;";
        if (majorCategory.ShowCategory)
        {
            displayNone = "";
        }
        <section class="major-category Category_@majorCategory.Category.CategoryName.Replace(" ", "_").Replace("[", "").Replace("]", "").Replace("/", "")" style="@displayNone">
            <input type="hidden" value="@majorCategory.CategoryID" class="category-id" />
            <input type="hidden" value="@majorCategory.ID" class="id" />
            <h2>
                <input type="text" value="@majorCategory.CategoryRename" class="major-title">
                <small>@majorCategory.Category.CategoryName</small>
            </h2>
            <table class="sortable-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Image</th>
                        <th>Name</th>
                        <th>Minor Category</th>
                        <th>Sell Price</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in productList)
                    {
                        <tr class="sorted-head product-row">
                            <td>

                                @Html.DisplayFor(model => product.ProductID)
                                <input type="hidden" value="@product.ProductID" class="product-id" />

                            </td>
                            <td>
                                <div class="product-image">
                                    <div class="thumb-image">
                                        @if (Model != null && product.ProductImage != null)
                                        {

                                            <img style="height:40px; width:40px;" src="@Url.Action("Show", "Product", new { id = product.ProductID })" />

                                        }
                                    </div>
                                </div>
                            </td>
                            <td>

                                @Html.DisplayFor(model => product.ProductName)

                            </td>
                            <td>
                                @if (product.Category1 != null)
                                {

                                    @Html.DisplayFor(model => product.Category1.CategoryName)

                                }
                            </td>
                            <td>

                                @Html.DisplayFor(model => product.ProductSellPrices.Where(p => p.SellPriceLevel == 1).FirstOrDefault().SellPriceFinalAmount)

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </section>

    }
</div>

<div class="presentation-sheet-area" style="display: none;">
    @Html.Partial("~/Views/Campaign/_PresentationPrintPreview.cshtml", Model);
</div>