@model PAS.Models.Campaign
@using PAS.Models;
@using PAS.Helpers;

@{
    ViewBag.Title = "Edit Campaign";
}

<div class="heading">
    <h1>
        @Html.DisplayFor(model => model.Company.CompanyName)
        <div class="heading-info">
            <strong>Campaign Name:</strong> @Html.DisplayFor(model => model.CampaignName)
        </div>
    </h1>
</div>
@using (Html.BeginForm(new { ReturnUrl = ViewBag.ReturnUrl }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.CompanyID)

    <div class="top-wrapper">
        <div class="flex-grid">
            <section class="seamless">
                <span>@Model.Products.Where(p => p.ProductStatus != MyExtensions.GetEnumDescription(Status.Archived)).Count()</span>
                <h3>Active Product Count</h3>
            </section>
            <section class="seamless">
                <span>@MyExtensions.DisplayPrintFriendlyName(Model.CampaignCreatedBy)</span>
                @Html.HiddenFor(model => model.CampaignCreatedBy)
                <h3>@Html.LabelForRequired(model => model.CampaignCreatedBy)</h3>
            </section>
            <section class="seamless">
                <span>@Html.EditorFor(model => model.CampaignCreatedOnDate)</span>
                <h3>@Html.LabelForRequired(model => model.CampaignCreatedOnDate)</h3>
            </section>
        </div>
        <div class="flex-grid">
            <nav class="sub-nav">
                <ul>
                    <li class="active">@Html.ActionLink("Products", "Edit", new { id = Model.CampaignID })</li>
                    <li>@Html.ActionLink("Presentation View", "PresentationView", new { id = Model.CampaignID })</li>
                </ul>
            </nav>
        </div>
    </div>
    <div class="edit-campaign" ng-controller="toggleController">
        <h2 ng-click="campaignToggle = !campaignToggle" class="form-heading">@ViewBag.Title</h2>
        @Html.ValidationSummary(false)
        <div class="flex-grid campaign-toggle" ng-show="campaignToggle" ng-cloak>
            <article class="input-left">
                <div class="controls">
                    @Html.LabelForRequired(model => model.CampaignName)
                    @Html.HiddenFor(model => model.CampaignID)
                    @Html.TextBoxFor(model => model.CampaignName, new { @class = "floatLabel" })
                </div>
                <div class="controls">
                    @Html.LabelForRequired(model => model.CampaignReason)
                    @Html.TextBoxFor(model => model.CampaignReason, new { @class = "floatLabel" })
                </div>
                <div class="controls">
                    @Html.LabelForRequired(model => model.CampaignProductCount)
                    @Html.TextBoxFor(model => model.CampaignProductCount, new { @class = "floatLabel" })
                </div>
                <div class="controls">
                    @Html.LabelForRequired(model => model.CampaignStatus)
                    @Html.DropDownListFor(model => model.CampaignStatus, MyExtensions.GetGenericEnumDropDown<Status>(), "", new { @class = "floatLabel" })
                </div>
            </article>
            <article class="input-right">
                <article class="controls">
                    @Html.LabelForRequired(model => model.CampaignAccountManagerComments)
                    @Html.TextAreaFor(model => model.CampaignAccountManagerComments, new { @placeholder = "Add Comments" })
                </article>
                <article class="controls">
                    @Html.LabelForRequired(model => model.CampaignMerchandiserComments)
                    @Html.TextAreaFor(model => model.CampaignMerchandiserComments, new { @placeholder = "Add Comments" })
                </article>
                <article class="controls">
                    @Html.LabelForRequired(model => model.CampaignInventoryBuyerComments)
                    @Html.TextAreaFor(model => model.CampaignInventoryBuyerComments, new { @placeholder = "Add Comments" })
                </article>
                <article class="controls">
                    @Html.LabelForRequired(model => model.CampaignMentorComments)
                    @Html.TextAreaFor(model => model.CampaignMentorComments, new { @placeholder = "Add Comments" })
                </article>
            </article>
            <div class="flex-grid">
                <p>
                    <input class="button green" type="submit" value="Save" />
                </p>
            </div>
        </div>
    </div>
  <!-- /edit-campaign -->
}

<div class="flex-grid">
    <a href="@Url.Action("Create", "Product", new { ReturnUrl = Url.Action("Edit", "Campaign", new { id = Model.CampaignID, ReturnUrl = ViewBag.ReturnUrl }), CampaignID = Model.CampaignID }, null)" class="button green add-product">New Product <i class="fa fa-plus pull-right"></i></a>
</div>
@{
    // Show Active Products
    Html.RenderPartial("~/Views/Product/_ProductList.cshtml", (IEnumerable<Product>)Model.Products.Where(p => p.ProductStatus != MyExtensions.GetEnumDescription(Status.Archived)), new ViewDataDictionary { { "type", "Active" } });
}

<div class="flex-grid">
    <button type="button" class="button green toggle-archived-products">Show/Hide Archived Product List</button>
</div>
@{// Show Archived Products
    Html.RenderPartial("~/Views/Product/_ProductList.cshtml", (IEnumerable<Product>)Model.Products.Where(p => p.ProductStatus == MyExtensions.GetEnumDescription(Status.Archived)), new ViewDataDictionary { { "type", "Archived" } });
}