@model NPR2._0._8.Models.Campaign
@using NPR2._0._8.Models;
@using NPR2._0._8.Helpers;

@{
    ViewBag.Title = "Edit Campaign";
}

<h2>Edit Campaign </h2>

@using(Html.BeginForm(new { ReturnUrl = ViewBag.ReturnUrl }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Campaign</legend>

        <div class="left-half-content">
            @Html.HiddenFor(model => model.CampaignID)

            <div class="editor-label">
                @Html.LabelForRequired(model => model.CampaignName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CampaignName)
                @Html.ValidationMessageFor(model => model.CampaignName)
            </div>

            <div class="editor-label">
                @Html.LabelForRequired(model => model.CompanyID, "Company")
            </div>
            <div class="editor-field">
                <span>@Html.DisplayFor(model => model.Company.CompanyName)</span>
                @Html.HiddenFor(model => model.CompanyID)
                @Html.ValidationMessageFor(model => model.CompanyID)
            </div>

            <div class="editor-label">
                @Html.LabelForRequired(model => model.CampaignReason)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CampaignReason)
                @Html.ValidationMessageFor(model => model.CampaignReason)
            </div>

            <div class="editor-label">
                @Html.LabelForRequired(model => model.CampaignProductCount)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CampaignProductCount)
                @Html.ValidationMessageFor(model => model.CampaignProductCount)
            </div>

            <div class="editor-label">
                @Html.LabelForRequired(model => model.CampaignStatus)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.CampaignStatus, MyExtensions.GetGenericEnumDropDown<Status>(), "")
                @Html.ValidationMessageFor(model => model.CampaignStatus)
            </div>

            <div class="editor-label">
                @Html.LabelForRequired(model => model.CampaignCreatedBy)
            </div>
            <div class="editor-field">
                <span>@Html.EditorFor(model => model.CampaignCreatedBy)</span>
                @Html.ValidationMessageFor(model => model.CampaignCreatedBy)
            </div>

            <div class="editor-label">
                @Html.LabelForRequired(model => model.CampaignCreatedOnDate)
            </div>
            <div class="editor-field">
                <span>@Html.EditorFor(model => model.CampaignCreatedOnDate)</span>
                @Html.ValidationMessageFor(model => model.CampaignCreatedOnDate)
            </div>
        </div>

        <div class="right-half-content">
            @{  /* NOTE/TODO: Hidden for Phase 1 
            <div>
                <h4>Campaign Fees</h4>
                <span class="right-content">
                    @Html.ActionLink("Create New Fee", "Create", "Fee", new { ReturnUrl = Url.Action("Edit", "Campaign", new { id = Model.CampaignID }), CampaignID = Model.CampaignID }, null)
                </span>
                <table class="index-table">
                    <tr>
                        <th>Fee Name</th>
                        <th>Type</th>
                        <th></th>
                    </tr>
                    @foreach(var fee in Model.Fees)
                    {
                        <tr>
                            <td>
                                <div class="editor-label">
                                    @Html.DisplayFor(model => fee.FeeName.FeeNameName)
                                </div>
                            </td>
                            <td>
                                <div>
                                    @Html.DisplayFor(model => fee.FeeType)
                                </div>
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", "Fee", new { ReturnUrl = Url.Action("Edit", "Campaign", new { id = Model.CampaignID }), id = fee.FeeID }, null) |
                                @Html.ActionLink("Delete", "Delete", "Fee", new { ReturnUrl = Url.Action("Edit", "Campaign", new { id = Model.CampaignID }), id = fee.FeeID }, null)
                            </td>
                        </tr>
                    }
                </table>
            </div>
            */  }
            <div>
                <h4>Product List | Count: @Model.Products.Where(p => p.ProductStatus != "Archived" &&  p.Campaign.CampaignStatus != "Archived" && p.Campaign.Company.CompanyStatus != "Archived").Count()</h4>
                <span class="right-content">
                    @Html.ActionLink("Create New Product", "Create", "Product", new { ReturnUrl = Url.Action("Edit", "Campaign", new { id = Model.CampaignID, ReturnUrl = ViewBag.ReturnUrl }), CampaignID = Model.CampaignID }, null)
                </span>
                <table class="index-table">
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                    @foreach(var product in Model.Products.Where(p => p.ProductStatus != "Archived" &&  p.Campaign.CampaignStatus != "Archived" && p.Campaign.Company.CompanyStatus != "Archived"))
                    {
                        <tr>
                            <td>
                                <div class="editor-label">
                                    @Html.DisplayFor(model => product.ProductID)
                                </div>
                            </td>
                            <td>
                                <div class="editor-label">
                                    @Html.DisplayFor(model => product.ProductName)
                                </div>
                            </td>
                            <td>
                                <div>
                                    @Html.DisplayFor(model => product.ProductStatus)
                                </div>
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", "Product", new { ReturnUrl = Url.Action("Edit", "Campaign", new { id = Model.CampaignID, ReturnUrl = ViewBag.ReturnUrl }) + "?ReturnUrl=" + ViewBag.ReturnUrl, id = product.ProductID}, null) |
                                @Html.ActionLink("Archive", "Archive", "Product", new { ReturnUrl = Url.Action("Edit", "Campaign", new { id = Model.CampaignID, ReturnUrl = ViewBag.ReturnUrl }), id = product.ProductID }, null)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>

        <div class="full-content">
            <div class="comments">
                <h3>Campaign Comments</h3>
                <table>
                    <tr>
                        <th>
                            @Html.LabelForRequired(model => model.CampaignAccountManagerComments)
                        </th>
                        <th>
                            @Html.LabelForRequired(model => model.CampaignMerchandiserComments)</th>
                        <th>
                            @Html.LabelForRequired(model => model.CampaignInventoryBuyerComments)</th>
                        <th>
                            @Html.LabelForRequired(model => model.CampaignMentorComments)</th>
                    </tr>
                    <tr>
                        <td>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.CampaignAccountManagerComments)
                                @Html.ValidationMessageFor(model => model.CampaignAccountManagerComments)
                            </div>
                        </td>
                        <td>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.CampaignMerchandiserComments)
                                @Html.ValidationMessageFor(model => model.CampaignMerchandiserComments)
                            </div>
                        </td>
                        <td>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.CampaignInventoryBuyerComments)
                                @Html.ValidationMessageFor(model => model.CampaignInventoryBuyerComments)
                            </div>
                        </td>
                        <td>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.CampaignMentorComments)
                                @Html.ValidationMessageFor(model => model.CampaignMentorComments)
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            <p>
                <input type="submit" value="Save" />
            </p>
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    
}
