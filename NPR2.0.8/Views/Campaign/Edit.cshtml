@model NPRModels.Campaign
@using NPRModels;
@using NPR2._0._8.Helpers;

@{
ViewBag.Title = "Edit Campaign";
}

@using(Html.BeginForm(new { ReturnUrl = ViewBag.ReturnUrl }))
{
  @Html.AntiForgeryToken()
  @Html.ValidationSummary(true)

  <div class="heading">
    <h1>@Html.DisplayFor(model => model.Company.CompanyName)
      <div class="heading-info">
        <strong>Campaign Name:</strong> @Html.DisplayFor(model => model.CampaignName)
      </div>
    </h1>
  </div>

  <!-- Link and information -->
  <div class="flex-grid">
    <section class="seamless">
      @Html.ActionLink("Presentation View", "PresentationView", new { id = Model.CampaignID })
    </section>
    <section class="seamless">
      <span>@Model.Products.Where(p => p.ProductStatus != MyExtensions.GetEnumDescription(Status.Archived)).Count()</span>
      <h3>Product Count</h3>
    </section>
    <section class="seamless">
      <span>@Html.EditorFor(model => model.CampaignCreatedBy)</span>
      @Html.ValidationMessageFor(model => model.CampaignCreatedBy)
      <h3>@Html.LabelForRequired(model => model.CampaignCreatedBy)</h3>
    </section>
    <section class="seamless">
      <span>@Html.EditorFor(model => model.CampaignCreatedOnDate)</span>
      @Html.ValidationMessageFor(model => model.CampaignCreatedOnDate)
      <h3>@Html.LabelForRequired(model => model.CampaignCreatedOnDate)</h3>
    </section>
  </div>

  <div ng-tabs class="tabbable">
    <ul class="nav nav-tabs">
      <li ng-tab-head="on">
        <a href="#" ng-click="$event.preventDefault()">Campaign View</a>
      </li>

      <li ng-tab-head>
        <a href="#" ng-click="$event.preventDefault()">Presentation View</a>
      </li>
    </ul>

    <div class="tab-content" style="overflow: hidden">
      <div ng-tab-body class="tab-pane">
      <!-- Add campaign details here -->
      </div>

      <div ng-tab-body class="tab-pane">

      </div>

    </div>
  </div>


  <div class="flex-grid">
    @Html.ActionLink("Create New Product", "Create", "Product", new { ReturnUrl = Url.Action("Edit", "Campaign", new { id = Model.CampaignID, ReturnUrl = ViewBag.ReturnUrl }), CampaignID = Model.CampaignID }, null)

    <section>
      <table>
        <tr>
          <th>ID</th>
          <th>Name</th>
          <th>Status</th>
          <th></th>
        </tr>
        @foreach (var product in Model.Products.Where(p => p.ProductStatus != MyExtensions.GetEnumDescription(Status.Archived)))
        {
        <tr>
          <td>
            <div class="controls">
              @Html.DisplayFor(model => product.ProductID)
            </div>
          </td>
          <td>
            <div class="controls">
              @Html.DisplayFor(model => product.ProductName)
            </div>
          </td>
          <td>
            <div>
              @Html.DisplayFor(model => product.ProductStatus)
            </div>
          </td>
          <td>
            @Html.ActionLink("Edit", "Edit", "Product", new { ReturnUrl = Url.Action("Edit", "Campaign", new { id = Model.CampaignID, ReturnUrl = ViewBag.ReturnUrl }) + "?ReturnUrl=" + ViewBag.ReturnUrl, id = product.ProductID}, null) |
            @Html.ActionLink("Archive", "Archive", "Product", new { ReturnUrl = Url.Action("Edit", "Campaign", new { id = Model.CampaignID, ReturnUrl = ViewBag.ReturnUrl }), id = product.ProductID }, null)
          </td>
        </tr>
      }
    </table>
  </section>
</div>

<div class="flex-grid">
  <article class="edit-campaign">

    <div class="controls">
      @Html.LabelForRequired(model => model.CampaignName)
      @Html.ValidationMessageFor(model => model.CampaignName)
      @Html.HiddenFor(model => model.CampaignID)
      @Html.TextBoxFor(model => model.CampaignName, new { @class = "floatLabel" })
    </div>
    <div class="controls">
      @Html.LabelForRequired(model => model.CampaignReason)
      @Html.ValidationMessageFor(model => model.CampaignReason)
      @Html.TextBoxFor(model => model.CampaignReason, new { @class = "floatLabel" })
    </div>
    <div class="controls">
      @Html.LabelForRequired(model => model.CampaignProductCount)
      @Html.ValidationMessageFor(model => model.CampaignProductCount)
      @Html.TextBoxFor(model => model.CampaignProductCount, new { @class = "floatLabel" })
    </div>
    <div class="controls">
      @Html.LabelForRequired(model => model.CampaignStatus)
      @Html.ValidationMessageFor(model => model.CampaignStatus)

      @Html.DropDownListFor(model => model.CampaignStatus, MyExtensions.GetGenericEnumDropDown<Status>(), "", new { @class="floatLabel"})
    </div>
  </article>
  <article>

    <article class="controls">
      @Html.LabelForRequired(model => model.CampaignAccountManagerComments)
      @Html.ValidationMessageFor(model => model.CampaignAccountManagerComments)
      @Html.TextBoxFor(model => model.CampaignAccountManagerComments)
    </article>
    <article class="controls">
      @Html.LabelForRequired(model => model.CampaignMerchandiserComments)
      @Html.ValidationMessageFor(model => model.CampaignMerchandiserComments)
      @Html.TextBoxFor(model => model.CampaignMerchandiserComments)
    </article>
    <article class="controls">
      @Html.LabelForRequired(model => model.CampaignInventoryBuyerComments)
      @Html.ValidationMessageFor(model => model.CampaignInventoryBuyerComments)
      @Html.TextBoxFor(model => model.CampaignInventoryBuyerComments)
    </article>
    <article class="controls">
      @Html.LabelForRequired(model => model.CampaignMentorComments)
      @Html.ValidationMessageFor(model => model.CampaignMentorComments)
      @Html.TextBoxFor(model => model.CampaignMentorComments)
    </article>
  </article>
</div>

<div class="flex-grid">
  <p>
    <input class="button green" type="submit" value="Save" />
  </p>
</div>



}

<div>
  @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

}
